// Generated by Dagger (https://dagger.dev).
package com.example.demo.database;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AlertViewModel_Factory implements Factory<AlertViewModel> {
  private final Provider<SurahRepository> surahRepositoryProvider;

  private final Provider<ParaRepository> paraRepositoryProvider;

  public AlertViewModel_Factory(Provider<SurahRepository> surahRepositoryProvider,
      Provider<ParaRepository> paraRepositoryProvider) {
    this.surahRepositoryProvider = surahRepositoryProvider;
    this.paraRepositoryProvider = paraRepositoryProvider;
  }

  @Override
  public AlertViewModel get() {
    return newInstance(surahRepositoryProvider.get(), paraRepositoryProvider.get());
  }

  public static AlertViewModel_Factory create(Provider<SurahRepository> surahRepositoryProvider,
      Provider<ParaRepository> paraRepositoryProvider) {
    return new AlertViewModel_Factory(surahRepositoryProvider, paraRepositoryProvider);
  }

  public static AlertViewModel newInstance(SurahRepository surahRepository,
      ParaRepository paraRepository) {
    return new AlertViewModel(surahRepository, paraRepository);
  }
}

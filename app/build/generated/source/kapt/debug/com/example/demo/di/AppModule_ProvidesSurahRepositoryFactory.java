// Generated by Dagger (https://dagger.dev).
package com.example.demo.di;

import com.example.demo.database.SurahDao;
import com.example.demo.database.SurahRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesSurahRepositoryFactory implements Factory<SurahRepository> {
  private final Provider<SurahDao> userDaoProvider;

  public AppModule_ProvidesSurahRepositoryFactory(Provider<SurahDao> userDaoProvider) {
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public SurahRepository get() {
    return providesSurahRepository(userDaoProvider.get());
  }

  public static AppModule_ProvidesSurahRepositoryFactory create(
      Provider<SurahDao> userDaoProvider) {
    return new AppModule_ProvidesSurahRepositoryFactory(userDaoProvider);
  }

  public static SurahRepository providesSurahRepository(SurahDao userDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesSurahRepository(userDao));
  }
}

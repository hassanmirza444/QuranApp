// Generated by Dagger (https://dagger.dev).
package com.example.demo.di;

import com.example.demo.database.ParaDao;
import com.example.demo.database.ParaRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesParaRepositoryFactory implements Factory<ParaRepository> {
  private final Provider<ParaDao> userDaoProvider;

  public AppModule_ProvidesParaRepositoryFactory(Provider<ParaDao> userDaoProvider) {
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public ParaRepository get() {
    return providesParaRepository(userDaoProvider.get());
  }

  public static AppModule_ProvidesParaRepositoryFactory create(Provider<ParaDao> userDaoProvider) {
    return new AppModule_ProvidesParaRepositoryFactory(userDaoProvider);
  }

  public static ParaRepository providesParaRepository(ParaDao userDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesParaRepository(userDao));
  }
}
